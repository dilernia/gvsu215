plot_scatter(mtcars, wt~drat, fill = ~gear, ls_line = TRUE)
devtools::load_all(".")
plot_scatter(mtcars, wt~drat, fill = ~gear, ls_line = TRUE)
devtools::load_all(".")
plot_scatter(mtcars, wt~drat, fill = ~gear, ls_line = TRUE)
devtools::load_all(".")
plot_scatter(mtcars, wt~drat, fill = ~gear, ls_line = TRUE)
devtools::load_all(".")
plot_scatter(mtcars, wt~drat, fill = ~gear, ls_line = TRUE)
devtools::load_all(".")
plot_scatter(mtcars, wt~drat, fill = ~gear, ls_line = TRUE)
test_that("scatter works with least squares line", {
expect_message(plot_scatter(mtcars, wt~drat, fill = ~cyl, ls_line = TRUE))
})
test_that("group scatter works with least squares line", {
expect_message(plot_scatter(mtcars, wt~drat, fill = ~cyl, ls_line = TRUE))
})
library(devtools)
use_version(which = "patch")
library(devtools)
devtools::load_all(".")
two_way(mtcars, cyl~gear)
Executions <- readr::read_csv("temp/Executions.csv")
two_way(Executions, Method ~ Race)
base::length(base::unique(Executions[, "Method"]))
base::unique(Executions[, "Method"])
devtools::load_all(".")
two_way(Executions, Method ~ Race)
two_way(mtcars, gear ~ cyl)
two_way(Executions, Method ~ Race, row_pct = TRUE)
devtools::load_all(".")
two_way(Executions, Method ~ Race, row_pct = TRUE)
devtools::load_all(".")
two_way(Executions, Method ~ Race, row_pct = TRUE)
two_way(mtcars, gear~cyl)
is.numeric(mtcars$cyl)
is.numeric(mtcars$gear)
is.numeric(Executions$Method)
devtools::load_all(".")
two_way(mtcars, gear~cyl)
devtools::load_all(".")
two_way(mtcars, gear~cyl)
devtools::load_all(".")
two_way(mtcars, gear~cyl)
two_way(mtcars, gear~cyl, row_pct = TRUE)
two_way(Executions, Method ~ Race)
AmesHousing <- readr::read_csv("temp/AmesHousing.csv")
plot_box(data = AmesHousing, ~SalePrice, fill = "grey80", title = NULL, na_rm = FALSE)
devtools::load_all(".")
plot_box(data = AmesHousing, ~SalePrice, fill = "grey80", title = NULL, na_rm = FALSE)
devtools::load_all(".")
plot_box(data = AmesHousing, ~SalePrice, fill = "grey80", title = NULL, na_rm = FALSE)
devtools::load_all(".")
plot_box(data = AmesHousing, ~SalePrice, fill = "grey80", title = NULL, na_rm = FALSE)
devtools::load_all(".")
plot_hist(data = AmesHousing, ~SalePrice, fill = "grey80", title = NULL, na_rm = FALSE)
plot_hist(data = AmesHousing, ~SalePrice, fill = ~`Paved Drive`, title = NULL, na_rm = FALSE)
plot_box(data = AmesHousing, ~SalePrice, fill = ~`Paved Drive`, title = NULL, na_rm = FALSE)
plot_box(mtcars, ~wt, fill = ~gear)
plot_hist(mtcars, ~drat, fill = ~cyl)
plot_box(data = AmesHousing, ~SalePrice, fill = ~`Paved Drive`, title = NULL, na_rm = FALSE)
plot_box(data = AmesHousing, SalePrice~`Paved Drive`, title = NULL, na_rm = FALSE)
plot_box(data = AmesHousing, SalePrice~Fireplaces, title = NULL, na_rm = FALSE)
plot_box(data = AmesHousing, SalePrice~Functional, title = NULL, na_rm = FALSE)
devtools::load_all(".")
plot_box(data = AmesHousing, SalePrice~Functional, title = NULL, na_rm = FALSE)
use_test()
test_that("boxplot works normally", {
expect_no_condition(plot_box(mtcars, ~wt))
})
test_that("group boxplot works normally", {
expect_no_condition(plot_box(mtcars, wt~gear))
})
plot_box(mtcars, wt~gear)
test_that("group boxplot works normally", {
expect_no_condition(plot_box(mtcars, wt~gear))
})
expect_no_condition(plot_box(mtcars, wt~gear))
devtools::load_all(".")
plot_box(mtcars, wt~gear)
devtools::load_all(".")
plot_box(mtcars, wt~gear)
devtools::load_all(".")
plot_box(mtcars, wt~gear)
plot_box(mtcars, ~wt)
plot_box(mtcars, wt~gear)
devtools::load_all(".")
plot_box(mtcars, wt~gear)
plot_box(data = AmesHousing, SalePrice~Functional, title = NULL, na_rm = FALSE)
plot_hist(mtcars, ~drat, binwidth = 0.05, group = ~cyl)
devtools::load_all(".")
plot_hist(mtcars, ~drat, binwidth = 0.05, group = ~cyl)
plot_hist(mtcars, ~drat, binwidth = 0.05)
plot_hist(mtcars, ~drat, binwidth = 0.05)
devtools::load_all(".")
devtools::load_all(".")
use_test
use_test()
corr(mtcars, wt~qsec)
Dogbreeds <- readr::read_csv("temp/Dogbreeds.csv")
corr(Dogbreeds, MaxWeight~max_height())
corr(Dogbreeds, MaxWeight~MaxHeight)
corr(Dogbreeds, MaxWeight~MaxHeight, na_rm = TRUE)
?laworder2
Dewpoint <- readr::read_csv("temp/Dewpoint.csv")
infer_paired(data = Dewpoint, ~dew2002, ~dew1997, digits = 3, conf_lvl = 0.95, caption = NULL)
devtools::load_all(".")
infer_paired(data = Dewpoint, ~dew2002, ~dew1997, digits = 3, conf_lvl = 0.95, caption = NULL)
devtools::load_all(".")
infer_paired(data = Dewpoint, ~dew2002, ~dew1997, digits = 3, conf_lvl = 0.95, caption = NULL)
check()
?use_import_from
check()
install.packages(c("ggplot2", "rmarkdown", "shiny"))
install.packages(c("ggplot2", "rmarkdown", "shiny"))
install.packages(c("ggplot2", "rmarkdown", "shiny"))
use_test
use_test()
library(devtools)
use_test()
Eyewitness <- readr::read_csv("temp/Eyewitness.csv")
plot_scatter(data = laworder2, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = laworder2, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
plot_scatter(data = Eyewitness, formula = mweight~mheight, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
?scale_color_viridis_d
?scales::viridis_pal
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
?gf_lm
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
?scale_color_distiller
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
?scale_color_ordinal
devtools::load_all(".")
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, legend_title = "Legend", ls_line = TRUE)
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, fill = ~gender, title = NULL, ls_line = TRUE)
use_test
use_test()
test_active_file()
plot_scatter(data = Eyewitness, formula = mweight~mheight, title = NULL, ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, title = NULL, ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, title = NULL, ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, title = NULL, ls_line = TRUE)
devtools::load_all(".")
plot_scatter(data = Eyewitness, formula = mweight~mheight, title = NULL, ls_line = TRUE)
plot_scatter(data = Eyewitness, formula = mweight~mheight, title = NULL)
plot_scatter(data = Eyewitness, formula = mweight~mheight, title = NULL, axis_lines = "both")
View(Dogbreeds)
EyeColor <- readr::read_csv("temp/EyeColor.csv")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
?prop.test
?HELPrct
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
prop.test(EyeColor~Gender, data = EyeColor, success = "blue")
mosaic::prop.test(EyeColor~Gender, data = EyeColor, success = "blue")
test <- mosaic::prop.test(EyeColor~Gender, data = EyeColor, success = "blue")
View(test)
mosaic::tally(EyeColor ~ Gender, data = EyeColor)
base::unique(EyeColor[, "Gender"])
base::unique(EyeColor[, "Gender"])[1]
base::unique(EyeColor[, "Gender"])[[1]]
base::unique(EyeColor[, "Gender"])[1,]
list(base::unique(EyeColor[, "Gender"]))
base::unique(EyeColor[, "Gender"])[,1]
base::unique(EyeColor[, "Gender"])[1, 1]
base::unique(EyeColor[, "Gender"])[1, 2]
base::unique(EyeColor[, "Gender"])[2, 1]
devtools::load_all(".")
prop.test(EyeColor~Gender, data = EyeColor, success = "blue")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
?as.list
devtools::load_all(".")
?as.list
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
test <- base::as.list(base::unique(EyeColor[, "Gender"]))
View(test)
test[1]
test[[1]]
test[[1, 1]]
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
base::as.vector(base::unique(EyeColor[, "Gender"]))
list("male", "female")
c("male", "female")
?aframe
??afreame
??aframe
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
dplyr::pull(EyeColor, Gender)
unique(dplyr::pull(EyeColor, Gender))
sort(unique(dplyr::pull(EyeColor, Gender)))
sort(unique(dplyr::pull(EyeColor, Gender)))[1]
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
EyeColor %>% filter(Gender == "female")
EyeColor %>% filter(Gender == "female" & is.na(Gender))
EyeColor %>% filter(Gender == "male" & is.na(Gender))
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_int(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
infer_prop2_test(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
devtools::load_all(".")
infer_prop2_test(data = EyeColor, formula = EyeColor ~ Gender, success = "blue")
RoundGoby <- readr::read_csv("temp/RoundGoby.csv")
infer_mean2_int(data = RoundGoby, formula = BD ~ species2)
devtools::load_all(".")
infer_mean2_int(data = RoundGoby, formula = BD ~ species2)
devtools::load_all(".")
infer_mean2_int(data = RoundGoby, formula = BD ~ species2)
devtools::load_all(".")
infer_mean2_int(data = RoundGoby, formula = BD ~ species2)
devtools::load_all(".")
infer_mean2_int(data = RoundGoby, formula = BD ~ species2)
devtools::load_all(".")
infer_mean2_int(data = RoundGoby, formula = BD ~ species2)
devtools::load_all(".")
infer_mean2_int(data = RoundGoby, formula = BD ~ species2)
devtools::load_all(".")
infer_mean2_int(data = RoundGoby, formula = BD ~ species2)
RoundGoby %>% group_by(species2) %>% summarise(mean = mean(BD))
devtools::load_all(".")
infer_mean2_int(data = RoundGoby, formula = BD ~ species2)
devtools::load_all(".")
infer_mean2_test(data = RoundGoby, formula = BD ~ species2)
use_test()
infer_prop2_int(mtcars, vs~am, success = 1)
devtools::load_all(".")
infer_prop2_int(mtcars, vs~am, success = 1)
infer_prop2_int(EyeColor, EyeColor~Gender, success = "blue")
infer_prop2_int(mtcars, vs~am, success = 1, digits = 4)
infer_prop2_test(mtcars, vs~am, success = 1)
devtools::load_all(".")
infer_prop2_test(mtcars, vs~am, success = 1)
infer_mean2_int(mtcars, wt~vs)
infer_paired(mtcars, var1 = ~drat, var2 = ~wt)
infer_mean2_test(mtcars, wt~vs)
infer_prop2_test(mtcars, vs~am, success = 1)
use_version(which = "minor")
check()
showNonASCIIfile("R/summaries.R")
tools::showNonASCIIfile("R/summaries.R")
"\u2081"
"n\u2081"
"n\u2081 missing"
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_that("one way fails with mispelling", {
expect_error(tbl_one(mtcars, ~Gear))
})
test_active_file()
test_active_file()
test_active_file()
check()
plot_bar(mtcars, ~cyl)
use_package("broom", min_version = TRUE)
library(devtools)
check()
?`:=`
use_import_from("data.table", ":=")
check()
use_test()
devtools::load_all(".")
infer_chisq(mtcars, cyl~gear, type = "test")
check()
devtools::load_all(".")
use_test()
infer_prop1(mtcars, ~vs, success = 1)
use_test()
check()
install.packages("checkhelper")
?checkhelper::print_globals
checkhelper::print_globals()
checkhelper::print_globals(quiet = TRUE)
check()
plot_bar(mtcars, ~cyl)
build_readme()
install.packages("webshot2")
build_readme()
?webshot2::webshot2
remove.packages("webshot2")
install.packages("webshot")
webshot::is_phantomjs_installed()
build_readme()
?render
build_readme()
build_readme()
remove.packages("webshot")
install.packages("webshot2")
install.packages("webshot2")
library(devtools)
?render
??render
build_readme()
?webshot2
??webshot2
check_win_devel()
?build_readme
pkgload::dev_help('gvsu215-package')
pkgload::load_all()
pkgload::dev_help('gvsu215-package')
